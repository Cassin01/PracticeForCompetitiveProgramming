"trait MOD<T> {",
"\t// べき乗余計算アルゴリズム",
"\t// a^n mod m を計算する",
"\t// \"バイナリ法\"",
"\tfn pow_mod(a: T, n: T, m: T) -> T;",
"}",
"",
"impl MOD<i64> for i64 {",
"\tfn pow_mod(mut a: i64, mut n: i64, m: i64) -> i64 {",
"\t\tlet mut res: i64 = 1;",
"\t\twhile n > 0 {",
"\t\t\tif n & 1 == 1 {",
"\t\t\t\tres = res * a % m;",
"\t\t\t}",
"\t\t\ta = a * a % m;",
"\t\t\tn >>= 1;",
"\t\t}",
"\t\tres",
"\t}",
"}",
"",
"impl MOD<usize> for usize {",
"\tfn pow_mod(mut a: usize, mut n: usize, m: usize) -> usize {",
"\t\tlet mut res: usize = 1;",
"\t\twhile n > 0 {",
"\t\t\tif n & 1 == 1 {",
"\t\t\t\tres = res * a % m;",
"\t\t\t}",
"\t\t\ta = a * a % m;",
"\t\t\tn >>= 1;",
"\t\t}",
"\t\tres",
"\t}",
"}"